{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"04 Project_47_Baggage_Surv_Model Building_Multi_Logi_regression","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"04owgSSr2_z1","executionInfo":{"status":"ok","timestamp":1628804953908,"user_tz":-330,"elapsed":588,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"ac5e36d9-7602-4640-d5e9-5c2010722dfd"},"source":["# Business Objectives: 1. Performance of Operators\n","print(\"Business Objectives: 1. Performance of Operators\")\n","# Business Objectives: 2. Performance of Machines (More Bag Scanning and Airlines)\n","print(\"Business Objectives: 2. Performance of Machines (More Bag Scanning and Airlines)\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Business Objectives: 1. Performance of Operators\n","Business Objectives: 2. Performance of Machines (More Bag Scanning and Airlines)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I15ZoIjO3Mp2","executionInfo":{"status":"ok","timestamp":1628804984018,"user_tz":-330,"elapsed":29452,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"aadb8b01-f204-4a80-e94f-8771568649dc"},"source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4AtXfDmz3X5R"},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"j46kIhO53Zbs"},"source":["df=pd.read_csv('gdrive/My Drive/Project_Work_DS/New/BagTrack .csv',encoding='iso-8859-1')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OGQzbwAe3lDf","executionInfo":{"status":"ok","timestamp":1628804989623,"user_tz":-330,"elapsed":27,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"4459f1d5-bb91-43d1-ec7e-9086544b763d"},"source":["# remove special character\n","df.columns = df.columns.str.replace(' ', '')\n","df.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Sr.No', 'BagID', 'MVXR', 'BHSID', 'L1Decision', 'Level1Decision',\n","       'L2Decision', 'L2LoginID', 'L2DecisionTime', 'L2_Op_Time', 'L3Decision',\n","       'L3LoginID', 'L3DecisionTime', 'L3_Op_Time'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GDgS16fX3rM0","executionInfo":{"status":"ok","timestamp":1628804989625,"user_tz":-330,"elapsed":22,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"43375f91-52d6-4afb-a380-7ac02f109307"},"source":["df.dtypes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Sr.No               int64\n","BagID               int64\n","MVXR                int64\n","BHSID              object\n","L1Decision         object\n","Level1Decision     object\n","L2Decision         object\n","L2LoginID         float64\n","L2DecisionTime     object\n","L2_Op_Time        float64\n","L3Decision         object\n","L3LoginID         float64\n","L3DecisionTime     object\n","L3_Op_Time        float64\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"od1RVhAo34oP"},"source":["# new column air_id for recognising airline company\n","\n","df['Air_ID'] = df['BHSID'].astype(str).str[1:4]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Pfpp0PL739Gi"},"source":["# Creating  a dict for airline names\n","Air_Name ={\n"," '001': 'American Airlines',\n"," '002': 'CargoItalia (alternate)',\n"," '005': 'Continental Airlines',\n"," '006': 'Delta Air Lines',\n"," '012': 'Northwest Airlines (alternate site)',\n"," '014': 'Air Canada',\n"," '016': 'United Airlines Cargo',\n"," '018': 'Canadian Airlines Int´l',\n"," '020': 'Lufthansa Cargo AG',\n"," '023': 'Fedex',\n"," '027': 'Alaska Airlines',\n"," '037': 'USAirways',\n"," '042': 'VARIG Brazilian Airlines',\n"," '043': 'Dragonair',\n"," '045': 'LAN Chile',\n"," '047': 'TAP Air Portugal',\n"," '048': 'Cyprus Airways',\n"," '050': 'Olympic Airways',\n"," '053': 'Aer Lingus Cargo',\n"," '055': 'Alitalia',\n"," '057': 'Air France',\n"," '058': 'Indian Airlines',\n"," '061': 'Air Seychelles',\n"," '064': 'Czech Airlines',\n"," '065': 'Saudi Arabian Airlines',\n"," '070': 'Syrian Arab Airlines',\n"," '071': 'Ethiopian Airlines',\n"," '072': 'Gulf Air',\n"," '074': 'KLM Cargo',\n"," '075': 'Iberia',\n"," '076': 'Middle East Airlines',\n"," '077': 'Egyptair',\n"," '079': 'Philippine Airlines',\n"," '080': 'LOT Polish Airlines',\n"," '081': 'Qantas Airways',\n"," '082': 'Brussels Airlines',\n"," '083': 'South African Airways',\n"," '086': 'Air New Zealand',\n"," '090': 'Kingfisher Airlines',\n"," '093': 'KD Avia',\n"," '096': 'Iran Air',\n"," '098': 'Air India',\n"," '105': 'Finnair',\n"," '106': 'Caribbean Airlines',\n"," '108': 'Icelandair',\n"," '112': 'China Cargo Airlines',\n"," '114': 'EL AL',\n"," '115': 'JAT Airways',\n"," '117': 'SAS-Scandinavian Airlines System',\n"," '118': 'TAAG Angola Airlines',\n"," '119': 'Air ALM',\n"," '124': 'Air Algerie',\n"," '125': 'British Airways',\n"," '126': 'Garuda Indonesia',\n"," '129': 'Martinair Cargo',\n"," '131': 'Japan Airlines',\n"," '133': 'LACSA Airlines of Costa Rica',\n"," '139': 'Aeromexico Cargo',\n"," '140': 'LIAT Airlines',\n"," '147': 'Royal Air Maroc',\n"," '148': 'Libyan Airlines',\n"," '157': 'Qatar Airways',\n"," '160': 'Cathay Pacific Airways',\n"," '163': 'TNT Airways',\n"," '165': 'Adria Airways',\n"," '172': 'Cargolux Airlines',\n"," '176': 'Emirates',\n"," '180': 'Korean Air',\n"," '182': 'Malev Hungarian Airlines',\n"," '183': 'VARIG Brazilian Airlines',\n"," '189': 'Jade Cargo International',\n"," '201': 'Air Jamaica',\n"," '202': 'TACA',\n"," '205': 'ANA All Nippon Cargo',\n"," '214': 'Pakistan Int´l Airlines',\n"," '217': 'Thai Airways',\n"," '229': 'Kuwait Airways',\n"," '230': 'Copa Airlines Cargo',\n"," '231': 'Lauda Air',\n"," '232': 'Homepage',\n"," '234': 'Japan Air System',\n"," '235': 'Turkish Airlines',\n"," '236': 'British Midland Airways',\n"," '239': 'Air Mauritius',\n"," '257': 'Austrian Cargo',\n"," '258': 'Air Madagascar',\n"," '265': 'Far Eastern Air Transport',\n"," '266': 'LTU (Leisure Cargo)',\n"," '270': 'Trans Mediterranean Airways',\n"," '272': 'Kalitta Air',\n"," '288': 'Air Hong Kong',\n"," '297': 'China Airlines',\n"," '301': 'Global Aviation and Services',\n"," '302': 'Sky West Airlines',\n"," '307': 'Centurion Air Cargo',\n"," '312': 'Indigo',        \n"," '324': 'Shandong Airlines (Chinese)',\n"," '330': 'Florida West International Airways',\n"," '345': 'Northern Air Cargo',\n"," '356': 'Cargolux Italia',\n"," '369': 'Atlas Air',\n"," '378': 'Cayman Airways',\n"," '390': 'Aegean Airlines',\n"," '403': 'Polar Air Cargo',\n"," '404': 'Arrow Air',\n"," '406': 'UPS Air Cargo',\n"," '416': 'National Air Cargo',\n"," '421': 'Siberia Airlines',\n"," '423': 'DHL Aviation/DHL Airways',\n"," '465': 'Air Astana',\n"," '479': 'Shenzhen Airlines (Chinese)',\n"," '507': 'Aeroflot',\n"," '512': 'Royal Jordanian',\n"," '526': 'Southwest Airlines',\n"," '529': 'Cielos Airlines',\n"," '549': 'ABSA Aerolinhas Brasileiras',\n"," '552': 'Mario’s Air',\n"," '564': 'Sun Express',\n"," '566': 'Ukraine Int´l Airlines',\n"," '572': 'Air Moldova',\n"," '575': 'Coyne Airways',\n"," '580': 'AirBridge Cargo',\n"," '589': 'Jet Airways',\n"," '603': 'more AWB tracking',\n"," '604': 'Cameroon Airlines',\n"," '607': 'ETIHAD Airways',\n"," '615': 'DHL Aviation / European Air Transport',\n"," '618': 'Singapore Airlines',\n"," '623': 'Bulgaria Air',\n"," '631': 'Air Greenland',\n"," '635': 'Yemenia Yemen Airways',\n"," '643': 'Air Malta',\n"," '656': 'Air Niugini',\n"," '657': 'Air Baltic',\n"," '672': 'Royal Brunei Airlines',\n"," '675': 'Air Macau',\n"," '695': 'Eva Airways',\n"," '700': 'CAL Cargo Air Lines',\n"," '706': 'Kenya Airways',\n"," '716': 'MNG Airlines',\n"," '724': 'Swiss',\n"," '729': 'Tampa Airlines',\n"," '731': 'Xiamen Airlines',\n"," '737': 'SATA Air Acores',\n"," '738': 'Vietnam Airlines',\n"," '757': 'Avient',\n"," '771': 'Azerbaijan Airlines',\n"," '774': 'Shanghai Airlines',\n"," '781': 'China Eastern Airlines',\n"," '784': 'China Southern Airlines',\n"," '800': 'Grandstar Cargo',\n"," '803': 'Mandarin Airlines',\n"," '810': 'Amerijet International',\n"," '817': 'SAC South American Airways',\n"," '825': 'Shanghai Airlines Cargo',\n"," '831': 'Croatia Airlines',\n"," '851': 'Hong Kong Airlines',\n"," '858': 'Africa West',\n"," '862': 'Atlantic Southeast Airlines',\n"," '865': 'MASAir',\n"," '870': 'Aerosvit',\n"," '871': 'Yangtze River Express Airlines',\n"," '873': 'AeroUnion',\n"," '876': 'Sichuan Airlines',\n"," '880': 'Hainan Airlines (Chinese)',\n"," '881': 'Condor Flugdienst',\n"," '886': 'Comair',\n"," '901': 'TAB Cargo',\n"," '907': 'Air Armenia',\n"," '928': 'Buraq Air Transport (Arabic only)',\n"," '932': 'Virgin Atlantic',\n"," '933': 'Nippon Cargo Airlines',\n"," '957': 'TAM Brazilian Airlines',\n"," '958': 'Insel Air Cargo',\n"," '960': 'Estonian Air',\n"," '976': 'Aeromexpress Cargo',\n"," '988': 'Asiana Airlines',\n"," '989': 'Great Wall Airlines',\n"," '996': 'Air Europa Cargo',\n"," '997': 'Biman Bangladesh',\n"," '999': 'Air China',\n"," '775': 'SpiceJet',\n"," '879': 'GoAir',\n"," '228': 'Vistara',\n"," '668': 'Tiger Airways',\n"," '100': 'TruJet',\n"," '514': 'Air Arabia',\n"," '910': 'Oman Air',\n"," '141': 'FlyDubai',\n"," '705': 'Jet Lite',\n"," '629': 'Silk Air',\n"," '807': 'Air Asia',\n"," '319': 'Expo Aviation',\n"," '279': 'JetBlue Airways',\n"," '555': 'Aeroflot',\n"," '128': 'Hong Kong Express',\n"," '790': 'Leaderjet',\n"," '030': 'Air Togo',\n"," '511': 'Yamal Airlines',\n"," '188': 'Air Alliance Inc',\n"," '652': 'Islandsflug',\n"," '041': 'Jetstar',\n"," '555': 'Aeroflot Russian Airlines',\n"," '909': 'Transwest Air',\n"," '337': 'Sun County Airlines',\n"," '412': 'Volga Dnepr Airlines',\n"," '352': 'Air Comet',\n"," '179' : 'Aztec Worldwide Airlines Inc.',\n"," '220' : 'Lufthansa ',\n"," '222' : 'InterSky',\n"," '250' : 'Uzbekistan Airways',\n"," '260' : 'Fiji Airways',\n"," '284' : 'Thai Air Cargo',\n"," '285' : 'Royal Nepal Airlines',\n"," '311' : 'Alajnihah Air Transport' ,\n"," '316' : 'JSC Nordavia - RA',\n"," '317' : 'Alliance Airlines',\n"," '327' : 'Aloha Airline',\n"," '357' : 'Business Express',\n"," '382' : 'Transarca International Airways',\n"," '386' : 'Air Aurora',\n"," '388' : 'Pan American World Airways',\n"," '446' : 'Allied Airlines',\n"," '459' : 'Rwandair Express',\n"," '486' : 'Jazeera Airways',\n","'523' : 'Travelport**',\n","'612' : 'TUI Airlines',\n","'712' : 'Volotea SL',\n","'755' : 'AIR Rarotonga',\n","'777' : 'Air Toronto',\n","'786' : 'Virgin Nigeria Airways',\n","'787' : 'Druk Air',\n","'816' : 'Malindo Airways',\n","'000' : 'MVXR',\n","'322' : 'Airport',\n","'314' : 'Airport1',\n","'313' : 'Airport2',\n","'387' : 'Airport3',\n","'028' : 'Airport4',\n","}"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"BtyFaehu3_Fu"},"source":["# Replacing the Air_ID by Airline name\n","df.replace({\"Air_ID\": Air_Name}, inplace = True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"lLQFJua84KHG","executionInfo":{"status":"ok","timestamp":1628805003366,"user_tz":-330,"elapsed":125,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"f224e538-00c4-4b2b-ce4f-302d6e5ee1f0"},"source":["df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sr.No</th>\n","      <th>BagID</th>\n","      <th>MVXR</th>\n","      <th>BHSID</th>\n","      <th>L1Decision</th>\n","      <th>Level1Decision</th>\n","      <th>L2Decision</th>\n","      <th>L2LoginID</th>\n","      <th>L2DecisionTime</th>\n","      <th>L2_Op_Time</th>\n","      <th>L3Decision</th>\n","      <th>L3LoginID</th>\n","      <th>L3DecisionTime</th>\n","      <th>L3_Op_Time</th>\n","      <th>Air_ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>5178</td>\n","      <td>2</td>\n","      <td>0312365478_0280SD</td>\n","      <td>Reject</td>\n","      <td>1/1/2020 0:16</td>\n","      <td>Time out</td>\n","      <td>32661.0</td>\n","      <td>1/1/2020 0:16</td>\n","      <td>27.0</td>\n","      <td>Reject</td>\n","      <td>32887.0</td>\n","      <td>1/1/2020 0:16</td>\n","      <td>8.0</td>\n","      <td>Indigo</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>5180</td>\n","      <td>2</td>\n","      <td>0312365545_0282SD</td>\n","      <td>Reject</td>\n","      <td>1/1/2020 0:19</td>\n","      <td>Accept</td>\n","      <td>32661.0</td>\n","      <td>1/1/2020 0:19</td>\n","      <td>13.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Indigo</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>5187</td>\n","      <td>2</td>\n","      <td>0312365871_0293SD</td>\n","      <td>Reject</td>\n","      <td>1/1/2020 0:24</td>\n","      <td>Accept</td>\n","      <td>32153.0</td>\n","      <td>1/1/2020 0:24</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Indigo</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>5189</td>\n","      <td>2</td>\n","      <td>0312365971_0296SD</td>\n","      <td>Reject</td>\n","      <td>1/1/2020 0:28</td>\n","      <td>Accept</td>\n","      <td>32153.0</td>\n","      <td>1/1/2020 0:28</td>\n","      <td>11.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Indigo</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>5196</td>\n","      <td>2</td>\n","      <td>0312366152_0304SD</td>\n","      <td>Reject</td>\n","      <td>1/1/2020 0:33</td>\n","      <td>Accept</td>\n","      <td>32153.0</td>\n","      <td>1/1/2020 0:33</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Indigo</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Sr.No  BagID  MVXR  ... L3DecisionTime L3_Op_Time  Air_ID\n","0      1   5178     2  ...  1/1/2020 0:16        8.0  Indigo\n","1      2   5180     2  ...            NaN        NaN  Indigo\n","2      3   5187     2  ...            NaN        NaN  Indigo\n","3      4   5189     2  ...            NaN        NaN  Indigo\n","4      5   5196     2  ...            NaN        NaN  Indigo\n","\n","[5 rows x 15 columns]"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o_AXpLAi4NSa","executionInfo":{"status":"ok","timestamp":1628805003368,"user_tz":-330,"elapsed":119,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"4cb89957-78ec-4688-9469-4da108ea79d2"},"source":["df.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Sr.No', 'BagID', 'MVXR', 'BHSID', 'L1Decision', 'Level1Decision',\n","       'L2Decision', 'L2LoginID', 'L2DecisionTime', 'L2_Op_Time', 'L3Decision',\n","       'L3LoginID', 'L3DecisionTime', 'L3_Op_Time', 'Air_ID'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"xI3D3tyO4Z4d"},"source":["# rearranging the columns name and\n","# drop ['BagID','BHSID', 'L1Decision', 'Level1Decision', 'L2DecisionTime', 'L3DecisionTime']\n","df = df[['Air_ID', 'MVXR', 'L2LoginID', 'L2Decision', 'L2_Op_Time','L3LoginID','L3Decision','L3_Op_Time']]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pc7Flsnk4lx_","executionInfo":{"status":"ok","timestamp":1628805003373,"user_tz":-330,"elapsed":103,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"4efad8ab-2986-4972-ac09-efb178e7a6fd"},"source":["df.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Air_ID', 'MVXR', 'L2LoginID', 'L2Decision', 'L2_Op_Time', 'L3LoginID',\n","       'L3Decision', 'L3_Op_Time'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"mgyCYcAr4n1x"},"source":["df.columns = df.columns.str.replace('[#,@,&,-,.]', '')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K6KWieMN4rwA","executionInfo":{"status":"ok","timestamp":1628805003376,"user_tz":-330,"elapsed":90,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"181267f0-ed61-4612-b3a4-46b98f488207"},"source":["df.dtypes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Air_ID         object\n","MVXR            int64\n","L2LoginID     float64\n","L2Decision     object\n","L2_Op_Time    float64\n","L3LoginID     float64\n","L3Decision     object\n","L3_Op_Time    float64\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"ZrBOph6qYHVl"},"source":["**EDA**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n4XDCY1V4wvu","executionInfo":{"status":"ok","timestamp":1628805003378,"user_tz":-330,"elapsed":79,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"61f27540-c52c-4a8b-f039-ce09e0e773da"},"source":["############# EDA ##############\n","# Basic data set Exploration\n","# Shape (dimensions) of the DataFrame\n","df.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1048574, 8)"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"TEuA2fMf4zo_","executionInfo":{"status":"ok","timestamp":1628805003380,"user_tz":-330,"elapsed":70,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"d9ded94c-8f83-4ecc-eaad-fe539c85d853"},"source":["# Display a few rows\n","df.sample(5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Air_ID</th>\n","      <th>MVXR</th>\n","      <th>L2LoginID</th>\n","      <th>L2Decision</th>\n","      <th>L2_Op_Time</th>\n","      <th>L3LoginID</th>\n","      <th>L3Decision</th>\n","      <th>L3_Op_Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>271497</th>\n","      <td>SpiceJet</td>\n","      <td>3</td>\n","      <td>31225.0</td>\n","      <td>Accept</td>\n","      <td>11.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>340799</th>\n","      <td>Air India</td>\n","      <td>4</td>\n","      <td>4218.0</td>\n","      <td>Accept</td>\n","      <td>23.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>415781</th>\n","      <td>Air India</td>\n","      <td>4</td>\n","      <td>32663.0</td>\n","      <td>Reject</td>\n","      <td>7.0</td>\n","      <td>31224.0</td>\n","      <td>Accept</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>135364</th>\n","      <td>MVXR</td>\n","      <td>2</td>\n","      <td>NaN</td>\n","      <td>Default Reject</td>\n","      <td>21.0</td>\n","      <td>30921.0</td>\n","      <td>Accept</td>\n","      <td>34.0</td>\n","    </tr>\n","    <tr>\n","      <th>629434</th>\n","      <td>American Airlines</td>\n","      <td>4</td>\n","      <td>32401.0</td>\n","      <td>Accept</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                   Air_ID  MVXR  L2LoginID  ... L3LoginID  L3Decision  L3_Op_Time\n","271497           SpiceJet     3    31225.0  ...       NaN         NaN         NaN\n","340799          Air India     4     4218.0  ...       NaN         NaN         NaN\n","415781          Air India     4    32663.0  ...   31224.0      Accept         7.0\n","135364               MVXR     2        NaN  ...   30921.0      Accept        34.0\n","629434  American Airlines     4    32401.0  ...       NaN         NaN         NaN\n","\n","[5 rows x 8 columns]"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":835},"id":"vO3IISfv42yd","executionInfo":{"status":"ok","timestamp":1628805004554,"user_tz":-330,"elapsed":1241,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"c8c939bd-c60b-4875-b3a1-cdc2a57047c8"},"source":["# Plot each numeric feature\n","df.hist(figsize=(14,14), xrot=45)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1008x1008 with 6 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":297},"id":"ijm5VaUL5Asd","executionInfo":{"status":"ok","timestamp":1628805005524,"user_tz":-330,"elapsed":122,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"31558363-f250-4f5f-9c97-14221de1e311"},"source":["# Summary statistics of the numerical features\n","df.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MVXR</th>\n","      <th>L2LoginID</th>\n","      <th>L2_Op_Time</th>\n","      <th>L3LoginID</th>\n","      <th>L3_Op_Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1.048574e+06</td>\n","      <td>1.015291e+06</td>\n","      <td>1.048473e+06</td>\n","      <td>234035.000000</td>\n","      <td>233915.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2.506897e+00</td>\n","      <td>2.697822e+04</td>\n","      <td>1.502409e+01</td>\n","      <td>25958.248253</td>\n","      <td>24.855324</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>9.723181e-01</td>\n","      <td>1.259051e+04</td>\n","      <td>7.134791e+00</td>\n","      <td>12844.230340</td>\n","      <td>16.086897</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000e+00</td>\n","      <td>1.805000e+03</td>\n","      <td>0.000000e+00</td>\n","      <td>1805.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000e+00</td>\n","      <td>3.092100e+04</td>\n","      <td>9.000000e+00</td>\n","      <td>18183.000000</td>\n","      <td>12.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2.000000e+00</td>\n","      <td>3.264400e+04</td>\n","      <td>1.400000e+01</td>\n","      <td>32644.000000</td>\n","      <td>21.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>3.000000e+00</td>\n","      <td>3.287800e+04</td>\n","      <td>2.100000e+01</td>\n","      <td>32880.000000</td>\n","      <td>35.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>4.000000e+00</td>\n","      <td>7.520400e+04</td>\n","      <td>7.100000e+01</td>\n","      <td>75204.000000</td>\n","      <td>103.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               MVXR     L2LoginID    L2_Op_Time      L3LoginID     L3_Op_Time\n","count  1.048574e+06  1.015291e+06  1.048473e+06  234035.000000  233915.000000\n","mean   2.506897e+00  2.697822e+04  1.502409e+01   25958.248253      24.855324\n","std    9.723181e-01  1.259051e+04  7.134791e+00   12844.230340      16.086897\n","min    1.000000e+00  1.805000e+03  0.000000e+00    1805.000000       1.000000\n","25%    2.000000e+00  3.092100e+04  9.000000e+00   18183.000000      12.000000\n","50%    2.000000e+00  3.264400e+04  1.400000e+01   32644.000000      21.000000\n","75%    3.000000e+00  3.287800e+04  2.100000e+01   32880.000000      35.000000\n","max    4.000000e+00  7.520400e+04  7.100000e+01   75204.000000     103.000000"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":173},"id":"-EBkFZzf5IO7","executionInfo":{"status":"ok","timestamp":1628805005533,"user_tz":-330,"elapsed":122,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"0a1f57be-e3f2-42c7-f7e2-7e9e1aedb3bc"},"source":["# Summary statistics of the categorical features\n","df.describe(include='object')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Air_ID</th>\n","      <th>L2Decision</th>\n","      <th>L3Decision</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1048574</td>\n","      <td>1048574</td>\n","      <td>235833</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>107</td>\n","      <td>4</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>Indigo</td>\n","      <td>Accept</td>\n","      <td>Accept</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>503796</td>\n","      <td>812741</td>\n","      <td>149033</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["         Air_ID L2Decision L3Decision\n","count   1048574    1048574     235833\n","unique      107          4          4\n","top      Indigo     Accept     Accept\n","freq     503796     812741     149033"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dTTKGnx8oyg6","executionInfo":{"status":"ok","timestamp":1628805005534,"user_tz":-330,"elapsed":119,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"a733ccf1-a4c5-41bf-f9ea-223faadd0e3d"},"source":["df['MVXR'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2    498309\n","4    236828\n","3    185650\n","1    127787\n","Name: MVXR, dtype: int64"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RoY1WUMvEzmN","executionInfo":{"status":"ok","timestamp":1628805005536,"user_tz":-330,"elapsed":92,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"2ef7f850-ca86-4ea2-be3f-e3cd501a5fc6"},"source":["L2_level_Operators = pd.unique(df['L2LoginID'])\n","print(len(L2_level_Operators))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["85\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ofVWvqMmFiKA","executionInfo":{"status":"ok","timestamp":1628805005537,"user_tz":-330,"elapsed":82,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"5987f1a0-c431-484a-b282-7afe27af05b7"},"source":["L3_level_Operators = pd.unique(df['L2LoginID'])\n","print(len(L3_level_Operators))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["85\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VXdI-09MD6my","executionInfo":{"status":"ok","timestamp":1628805005545,"user_tz":-330,"elapsed":79,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"20c4cde1-ce62-42e8-9ab6-86ac61d444d0"},"source":["df['L2Decision'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Accept            812741\n","Reject            179968\n","Default Reject     33384\n","Time out           22481\n","Name: L2Decision, dtype: int64"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0nm-7OKSEMyO","executionInfo":{"status":"ok","timestamp":1628805005546,"user_tz":-330,"elapsed":69,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"88dca0f4-141a-4e3a-aaa6-da05eb72d676"},"source":["df['L3Decision'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Accept            149033\n","Reject             81713\n","Time out            3169\n","Default Reject      1918\n","Name: L3Decision, dtype: int64"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":541},"id":"3Rx3CJJb5PEN","executionInfo":{"status":"ok","timestamp":1628805008698,"user_tz":-330,"elapsed":3211,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"eb404b3d-cd84-47c7-c7c1-4be3147a4cdb"},"source":["# Plot each categorical feature\n","for column in df.select_dtypes(include='object'):\n","    if df[column].nunique() < 10:\n","        sns.countplot(y=column, data=df)\n","        plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":280},"id":"IGTrOOLf5ZO3","executionInfo":{"status":"ok","timestamp":1628805010412,"user_tz":-330,"elapsed":1726,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"bb83b799-b78d-475d-b4a1-19ad06d0ed44"},"source":["# Segment the target variable by categorical features.\n","sns.boxplot(y='L2Decision', x='L2_Op_Time', data=df)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":280},"id":"MHaIBEIf5tM2","executionInfo":{"status":"ok","timestamp":1628805010413,"user_tz":-330,"elapsed":194,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"3d084cdf-f148-45a8-cb8e-05d78cd0ebcf"},"source":["# Segment the target variable by categorical features.\n","sns.boxplot(y=column, x='L3_Op_Time', data=df)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":351},"id":"xJfivCwW6A_G","executionInfo":{"status":"ok","timestamp":1628805010414,"user_tz":-330,"elapsed":191,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"7afbf6ab-f80d-4e0a-da0e-489475a6b0de"},"source":["####### Outliers L2_Op_Time\n","sns.boxplot(df['L2_Op_Time'])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fdc45527750>"]},"metadata":{"tags":[]},"execution_count":29},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":351},"id":"1KWtntam6PYl","executionInfo":{"status":"ok","timestamp":1628805010416,"user_tz":-330,"elapsed":167,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"e1729790-8f61-4f2f-e7d7-5d6c1a057807"},"source":["####### Outliers L3_Op_Time\n","sns.boxplot(df['L3_Op_Time'])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n","  FutureWarning\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fdc45668090>"]},"metadata":{"tags":[]},"execution_count":30},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":391},"id":"TSsNWXKV6eUL","executionInfo":{"status":"ok","timestamp":1628805010421,"user_tz":-330,"elapsed":160,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"e0d51d5a-2733-4ca7-8a14-045dfb86a518"},"source":["# Group numeric features by each categorical feature\n","for column in df.select_dtypes(include='object'):\n","    if df[column].nunique() < 10:\n","        display(df.groupby(column).mean())"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MVXR</th>\n","      <th>L2LoginID</th>\n","      <th>L2_Op_Time</th>\n","      <th>L3LoginID</th>\n","      <th>L3_Op_Time</th>\n","    </tr>\n","    <tr>\n","      <th>L2Decision</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Accept</th>\n","      <td>2.508125</td>\n","      <td>27300.054124</td>\n","      <td>14.484377</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Default Reject</th>\n","      <td>2.528996</td>\n","      <td>24661.069307</td>\n","      <td>21.642370</td>\n","      <td>26138.657966</td>\n","      <td>28.292720</td>\n","    </tr>\n","    <tr>\n","      <th>Reject</th>\n","      <td>2.497955</td>\n","      <td>25710.171119</td>\n","      <td>14.717350</td>\n","      <td>26000.041478</td>\n","      <td>23.911825</td>\n","    </tr>\n","    <tr>\n","      <th>Time out</th>\n","      <td>2.501268</td>\n","      <td>25504.692140</td>\n","      <td>27.193185</td>\n","      <td>25355.251917</td>\n","      <td>27.437435</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                    MVXR     L2LoginID  L2_Op_Time     L3LoginID  L3_Op_Time\n","L2Decision                                                                  \n","Accept          2.508125  27300.054124   14.484377           NaN         NaN\n","Default Reject  2.528996  24661.069307   21.642370  26138.657966   28.292720\n","Reject          2.497955  25710.171119   14.717350  26000.041478   23.911825\n","Time out        2.501268  25504.692140   27.193185  25355.251917   27.437435"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MVXR</th>\n","      <th>L2LoginID</th>\n","      <th>L2_Op_Time</th>\n","      <th>L3LoginID</th>\n","      <th>L3_Op_Time</th>\n","    </tr>\n","    <tr>\n","      <th>L3Decision</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Accept</th>\n","      <td>2.513994</td>\n","      <td>25334.662245</td>\n","      <td>17.995260</td>\n","      <td>26045.171526</td>\n","      <td>26.016828</td>\n","    </tr>\n","    <tr>\n","      <th>Default Reject</th>\n","      <td>2.449426</td>\n","      <td>24096.185701</td>\n","      <td>21.973931</td>\n","      <td>27505.100000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>Reject</th>\n","      <td>2.482714</td>\n","      <td>26274.595265</td>\n","      <td>14.643479</td>\n","      <td>25834.393095</td>\n","      <td>21.290859</td>\n","    </tr>\n","    <tr>\n","      <th>Time out</th>\n","      <td>2.516567</td>\n","      <td>25473.201421</td>\n","      <td>19.397788</td>\n","      <td>25005.429789</td>\n","      <td>62.141685</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                    MVXR     L2LoginID  L2_Op_Time     L3LoginID  L3_Op_Time\n","L3Decision                                                                  \n","Accept          2.513994  25334.662245   17.995260  26045.171526   26.016828\n","Default Reject  2.449426  24096.185701   21.973931  27505.100000         NaN\n","Reject          2.482714  26274.595265   14.643479  25834.393095   21.290859\n","Time out        2.516567  25473.201421   19.397788  25005.429789   62.141685"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"vVVImwDw6uJj","executionInfo":{"status":"ok","timestamp":1628805010422,"user_tz":-330,"elapsed":158,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"8f9c33e9-4ac3-4ee6-dfad-aaad036d96be"},"source":["# Correlations matrix for the different numerical features\n","corr= df.corr()\n","corr"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>MVXR</th>\n","      <th>L2LoginID</th>\n","      <th>L2_Op_Time</th>\n","      <th>L3LoginID</th>\n","      <th>L3_Op_Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>MVXR</th>\n","      <td>1.000000</td>\n","      <td>-0.005333</td>\n","      <td>-0.006375</td>\n","      <td>0.002375</td>\n","      <td>-0.002127</td>\n","    </tr>\n","    <tr>\n","      <th>L2LoginID</th>\n","      <td>-0.005333</td>\n","      <td>1.000000</td>\n","      <td>-0.036600</td>\n","      <td>-0.000679</td>\n","      <td>-0.032101</td>\n","    </tr>\n","    <tr>\n","      <th>L2_Op_Time</th>\n","      <td>-0.006375</td>\n","      <td>-0.036600</td>\n","      <td>1.000000</td>\n","      <td>-0.023711</td>\n","      <td>0.149162</td>\n","    </tr>\n","    <tr>\n","      <th>L3LoginID</th>\n","      <td>0.002375</td>\n","      <td>-0.000679</td>\n","      <td>-0.023711</td>\n","      <td>1.000000</td>\n","      <td>-0.025998</td>\n","    </tr>\n","    <tr>\n","      <th>L3_Op_Time</th>\n","      <td>-0.002127</td>\n","      <td>-0.032101</td>\n","      <td>0.149162</td>\n","      <td>-0.025998</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                MVXR  L2LoginID  L2_Op_Time  L3LoginID  L3_Op_Time\n","MVXR        1.000000  -0.005333   -0.006375   0.002375   -0.002127\n","L2LoginID  -0.005333   1.000000   -0.036600  -0.000679   -0.032101\n","L2_Op_Time -0.006375  -0.036600    1.000000  -0.023711    0.149162\n","L3LoginID   0.002375  -0.000679   -0.023711   1.000000   -0.025998\n","L3_Op_Time -0.002127  -0.032101    0.149162  -0.025998    1.000000"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"Obar2Ggg60FE","executionInfo":{"status":"ok","timestamp":1628805010424,"user_tz":-330,"elapsed":156,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"c4881f0a-7912-4511-82cd-cfc32bd7ad2c"},"source":["# Heatmap of the correlations\n","plt.figure(figsize=(10,8))\n","sns.heatmap(corr, cmap='RdBu_r', annot=True)\n","plt.show()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x576 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ye72K9S-74bk","executionInfo":{"status":"ok","timestamp":1628805010425,"user_tz":-330,"elapsed":154,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"521af428-81c8-48b8-9551-c0737b2c8dd3"},"source":["df.dtypes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Air_ID         object\n","MVXR            int64\n","L2LoginID     float64\n","L2Decision     object\n","L2_Op_Time    float64\n","L3LoginID     float64\n","L3Decision     object\n","L3_Op_Time    float64\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":296},"id":"qtaFse5_Dchx","executionInfo":{"status":"ok","timestamp":1628805011456,"user_tz":-330,"elapsed":1174,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"56fe5680-7621-443e-ef91-2b4ee57c49cd"},"source":["# countplot for Air_ID Column\n","sns.countplot(y=\"Air_ID\", data=df, order=df.Air_ID.value_counts().iloc[:10].index)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fdc459ab910>"]},"metadata":{"tags":[]},"execution_count":35},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ODpy3hLjgxYv","executionInfo":{"status":"ok","timestamp":1628805011457,"user_tz":-330,"elapsed":107,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"d1e59cc2-e489-411d-c01c-8805e8511f18"},"source":["df.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Air_ID', 'MVXR', 'L2LoginID', 'L2Decision', 'L2_Op_Time', 'L3LoginID',\n","       'L3Decision', 'L3_Op_Time'],\n","      dtype='object')"]},"metadata":{"tags":[]},"execution_count":36}]},{"cell_type":"code","metadata":{"id":"ecKZTUm1YP_r"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Vlk2PgyIhWZQ"},"source":["**Model** **Building** **for L2 Operators** **Random Forest**"]},{"cell_type":"code","metadata":{"id":"y_nbebcohhNr"},"source":["# Creating dataframe for L2 operators\n","df_L2 = df.drop(['Air_ID','MVXR','L3LoginID', 'L3Decision', 'L3_Op_Time'],axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"W3eNdx5-hw7c","executionInfo":{"status":"ok","timestamp":1628805150163,"user_tz":-330,"elapsed":718,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"351937f1-7dc3-4824-887b-e0e05d69304a"},"source":["df_L2.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['L2LoginID', 'L2Decision', 'L2_Op_Time'], dtype='object')"]},"metadata":{"tags":[]},"execution_count":76}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xE4HNhHPh6QJ","executionInfo":{"status":"ok","timestamp":1628805151683,"user_tz":-330,"elapsed":6,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"c4e5ab7f-5384-4143-eef3-6dec7bd512db"},"source":["df_L2.L2Decision.value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Accept            812741\n","Reject            179968\n","Default Reject     33384\n","Time out           22481\n","Name: L2Decision, dtype: int64"]},"metadata":{"tags":[]},"execution_count":77}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zOdycaeQh73w","executionInfo":{"status":"ok","timestamp":1628805154437,"user_tz":-330,"elapsed":827,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"34471bbc-fab0-491f-aa55-459c27444ce2"},"source":["# delete rows containing \"Default Reject\"\n","df_L2 = df_L2 [~df_L2.L2Decision.str.contains(\"Default Reject\") == True]\n","df_L2.L2Decision.value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Accept      812741\n","Reject      179968\n","Time out     22481\n","Name: L2Decision, dtype: int64"]},"metadata":{"tags":[]},"execution_count":78}]},{"cell_type":"code","metadata":{"id":"B0MbUga7iAek"},"source":["## Categorize/ create bins for the L2 operator time and create new feature L2_OP_PER\n","\n","df_L2['L2_OP_PER']=pd.cut(x=df_L2['L2_Op_Time'], bins=[0,8,17,25,150], \n","                        labels=[\"excellent\", \"good\", \"normal\", \"bad\"])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"XWWuHY09i7Xj","executionInfo":{"status":"ok","timestamp":1628805159049,"user_tz":-330,"elapsed":16,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"2e9d60c5-6322-4c16-ec4f-91656a1afda6"},"source":["df_L2.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>L2LoginID</th>\n","      <th>L2Decision</th>\n","      <th>L2_Op_Time</th>\n","      <th>L2_OP_PER</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>32661.0</td>\n","      <td>Time out</td>\n","      <td>27.0</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>32661.0</td>\n","      <td>Accept</td>\n","      <td>13.0</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>32153.0</td>\n","      <td>Accept</td>\n","      <td>5.0</td>\n","      <td>excellent</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>32153.0</td>\n","      <td>Accept</td>\n","      <td>11.0</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32153.0</td>\n","      <td>Accept</td>\n","      <td>5.0</td>\n","      <td>excellent</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   L2LoginID L2Decision  L2_Op_Time  L2_OP_PER\n","0    32661.0   Time out        27.0        bad\n","1    32661.0     Accept        13.0       good\n","2    32153.0     Accept         5.0  excellent\n","3    32153.0     Accept        11.0       good\n","4    32153.0     Accept         5.0  excellent"]},"metadata":{"tags":[]},"execution_count":80}]},{"cell_type":"code","metadata":{"id":"4kZDV8EvjF_K"},"source":["# Replacing the Time_Out values from the L2Decision with \"bad\" in L2_OP_PER for those having time less than 25 sec\n","# First mark values corrusponding in L2_OP_PER as nan\n","df_L2['L2_OP_PER'][df_L2.L2Decision == 'Time out'] = np.nan"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"ULRvMamLjkD7","executionInfo":{"status":"ok","timestamp":1628805165571,"user_tz":-330,"elapsed":12,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"cbd28369-2b2c-44d9-d8f9-ee15a38ce77d"},"source":["df_L2.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>L2LoginID</th>\n","      <th>L2Decision</th>\n","      <th>L2_Op_Time</th>\n","      <th>L2_OP_PER</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>32661.0</td>\n","      <td>Time out</td>\n","      <td>27.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>32661.0</td>\n","      <td>Accept</td>\n","      <td>13.0</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>32153.0</td>\n","      <td>Accept</td>\n","      <td>5.0</td>\n","      <td>excellent</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>32153.0</td>\n","      <td>Accept</td>\n","      <td>11.0</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32153.0</td>\n","      <td>Accept</td>\n","      <td>5.0</td>\n","      <td>excellent</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   L2LoginID L2Decision  L2_Op_Time  L2_OP_PER\n","0    32661.0   Time out        27.0        NaN\n","1    32661.0     Accept        13.0       good\n","2    32153.0     Accept         5.0  excellent\n","3    32153.0     Accept        11.0       good\n","4    32153.0     Accept         5.0  excellent"]},"metadata":{"tags":[]},"execution_count":82}]},{"cell_type":"code","metadata":{"id":"tV10O8JBjnl2"},"source":["# now replace NAN with \"bad\"\n","df_L2['L2_OP_PER'].fillna('bad', inplace =True) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"B6ovzr75j8Ni","executionInfo":{"status":"ok","timestamp":1628805172539,"user_tz":-330,"elapsed":12,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"cc029ce2-4040-4d68-e9e4-4aeea3f5d543"},"source":["df_L2.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>L2LoginID</th>\n","      <th>L2Decision</th>\n","      <th>L2_Op_Time</th>\n","      <th>L2_OP_PER</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>32661.0</td>\n","      <td>Time out</td>\n","      <td>27.0</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>32661.0</td>\n","      <td>Accept</td>\n","      <td>13.0</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>32153.0</td>\n","      <td>Accept</td>\n","      <td>5.0</td>\n","      <td>excellent</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>32153.0</td>\n","      <td>Accept</td>\n","      <td>11.0</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32153.0</td>\n","      <td>Accept</td>\n","      <td>5.0</td>\n","      <td>excellent</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   L2LoginID L2Decision  L2_Op_Time  L2_OP_PER\n","0    32661.0   Time out        27.0        bad\n","1    32661.0     Accept        13.0       good\n","2    32153.0     Accept         5.0  excellent\n","3    32153.0     Accept        11.0       good\n","4    32153.0     Accept         5.0  excellent"]},"metadata":{"tags":[]},"execution_count":84}]},{"cell_type":"code","metadata":{"id":"duu2lpvcvN9g"},"source":["from sklearn.preprocessing import LabelEncoder"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"yf2wn9ofvpwI"},"source":["#Applying Label Encoding to column L2Decision\n","lb = LabelEncoder()\n","df_L2[\"L2Decision\"] = lb.fit_transform(df_L2[\"L2Decision\"])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"feHIamhdv_xX","executionInfo":{"status":"ok","timestamp":1628805194242,"user_tz":-330,"elapsed":20,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"66c56c7d-15f1-4baf-9b9f-3dc392d8301a"},"source":["df_L2.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>L2LoginID</th>\n","      <th>L2Decision</th>\n","      <th>L2_Op_Time</th>\n","      <th>L2_OP_PER</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>32661.0</td>\n","      <td>2</td>\n","      <td>27.0</td>\n","      <td>bad</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>32661.0</td>\n","      <td>0</td>\n","      <td>13.0</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>32153.0</td>\n","      <td>0</td>\n","      <td>5.0</td>\n","      <td>excellent</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>32153.0</td>\n","      <td>0</td>\n","      <td>11.0</td>\n","      <td>good</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>32153.0</td>\n","      <td>0</td>\n","      <td>5.0</td>\n","      <td>excellent</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   L2LoginID  L2Decision  L2_Op_Time  L2_OP_PER\n","0    32661.0           2        27.0        bad\n","1    32661.0           0        13.0       good\n","2    32153.0           0         5.0  excellent\n","3    32153.0           0        11.0       good\n","4    32153.0           0         5.0  excellent"]},"metadata":{"tags":[]},"execution_count":87}]},{"cell_type":"code","metadata":{"id":"BUXLk8YyWvBh"},"source":["df_L2 = df_L2[[\"L2_OP_PER\", \"L2LoginID\", \"L2Decision\",  \"L2_Op_Time\"]]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"ol-ruY9dWz5X","executionInfo":{"status":"ok","timestamp":1628805222401,"user_tz":-330,"elapsed":708,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"9e9a3d55-27a4-4275-937b-f0038ddc2406"},"source":["df_L2.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>L2_OP_PER</th>\n","      <th>L2LoginID</th>\n","      <th>L2Decision</th>\n","      <th>L2_Op_Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>bad</td>\n","      <td>32661.0</td>\n","      <td>2</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>good</td>\n","      <td>32661.0</td>\n","      <td>0</td>\n","      <td>13.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>excellent</td>\n","      <td>32153.0</td>\n","      <td>0</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>good</td>\n","      <td>32153.0</td>\n","      <td>0</td>\n","      <td>11.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>excellent</td>\n","      <td>32153.0</td>\n","      <td>0</td>\n","      <td>5.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   L2_OP_PER  L2LoginID  L2Decision  L2_Op_Time\n","0        bad    32661.0           2        27.0\n","1       good    32661.0           0        13.0\n","2  excellent    32153.0           0         5.0\n","3       good    32153.0           0        11.0\n","4  excellent    32153.0           0         5.0"]},"metadata":{"tags":[]},"execution_count":89}]},{"cell_type":"code","metadata":{"id":"v_WWVmmFwB7C"},"source":["# Splitting data into training and testing data set\n","from sklearn.model_selection import train_test_split\n","train, test = train_test_split(df_L2, test_size = 0.2)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ajwudt30wYDI","executionInfo":{"status":"ok","timestamp":1628805232366,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"cef02867-f27b-4f6f-bf83-c7b4bf41af5a"},"source":["train.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(812152, 4)"]},"metadata":{"tags":[]},"execution_count":91}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YEUe0hzxwbvE","executionInfo":{"status":"ok","timestamp":1628805235188,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"9c35a5be-47c5-4e13-b96d-187f1a0005cf"},"source":["test.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(203038, 4)"]},"metadata":{"tags":[]},"execution_count":92}]},{"cell_type":"code","metadata":{"id":"cukDXVq_XGju"},"source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"8hUIL9V_ZirG"},"source":["**MultiLogistic Regression**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vlxcp00qW5Qd","executionInfo":{"status":"ok","timestamp":1628805658691,"user_tz":-330,"elapsed":348857,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"be1ece53-9486-4dbd-9fa9-4d4ce9c8329d"},"source":["# ‘multinomial’ option is supported only by the ‘lbfgs’ and ‘newton-cg’ solvers\n","model = LogisticRegression(multi_class = \"multinomial\", solver = \"newton-cg\").fit(train.iloc[:, 1:], train.iloc[:, 0])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/scipy/optimize/linesearch.py:466: LineSearchWarning: The line search algorithm did not converge\n","  warn('The line search algorithm did not converge', LineSearchWarning)\n","/usr/local/lib/python3.7/dist-packages/scipy/optimize/linesearch.py:314: LineSearchWarning: The line search algorithm did not converge\n","  warn('The line search algorithm did not converge', LineSearchWarning)\n","/usr/local/lib/python3.7/dist-packages/sklearn/utils/optimize.py:212: ConvergenceWarning: newton-cg failed to converge. Increase the number of iterations.\n","  \"number of iterations.\", ConvergenceWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"k5z7g2lSYlD4"},"source":["# Test predictions\n","test_predict = model.predict(test.iloc[:, 1:]) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o9SfuTQTZNjX","executionInfo":{"status":"ok","timestamp":1628805870065,"user_tz":-330,"elapsed":518,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"bbac5306-bf8d-4f85-8932-618db9272970"},"source":["# Test accuracy \n","accuracy_score(test.iloc[:,0], test_predict)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9485564278607945"]},"metadata":{"tags":[]},"execution_count":97}]},{"cell_type":"code","metadata":{"id":"cL2abxKJZVYq"},"source":["# Train predictions\n","train_predict = model.predict(train.iloc[:, 1:])  "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6sdqlnegZa6o","executionInfo":{"status":"ok","timestamp":1628805912961,"user_tz":-330,"elapsed":889,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"196258c8-960c-4638-c669-9a032584605c"},"source":["# Train accuracy \n","accuracy_score(train.iloc[:,0], train_predict)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9491770013495011"]},"metadata":{"tags":[]},"execution_count":99}]},{"cell_type":"markdown","metadata":{"id":"BdBBE69RO03J"},"source":["** Model Building for L3 Operators Random Forest **"]},{"cell_type":"code","metadata":{"id":"8nR6uZLWO84R"},"source":["# Creating dataframe for L2 operators\n","df_L3 = df.drop(['Air_ID','MVXR','L2LoginID', 'L2Decision', 'L2_Op_Time'],axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ShaMO4mSRE79","executionInfo":{"status":"ok","timestamp":1628806133127,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"4e95ead4-da2c-4822-b40f-ef4acfaa3c8b"},"source":["df_L3.columns"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['L3LoginID', 'L3Decision', 'L3_Op_Time'], dtype='object')"]},"metadata":{"tags":[]},"execution_count":105}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NjnUF7WpRIVu","executionInfo":{"status":"ok","timestamp":1628806135253,"user_tz":-330,"elapsed":17,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"6fd637d9-a46f-4296-fe58-f29387c430d4"},"source":["df_L3.L3Decision.value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Accept            149033\n","Reject             81713\n","Time out            3169\n","Default Reject      1918\n","Name: L3Decision, dtype: int64"]},"metadata":{"tags":[]},"execution_count":106}]},{"cell_type":"code","metadata":{"id":"t1NA0MPTRTd3"},"source":["# delete rows containing \"Default Reject\"\n","df_L3 = df_L3 [~df_L3.L3Decision.str.contains(\"Default Reject\",na=False)]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bDG71V8pRo1C","executionInfo":{"status":"ok","timestamp":1628806138796,"user_tz":-330,"elapsed":10,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"cf43744d-810e-4a37-fa4a-7defd332f378"},"source":["df_L3.L3Decision.value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Accept      149033\n","Reject       81713\n","Time out      3169\n","Name: L3Decision, dtype: int64"]},"metadata":{"tags":[]},"execution_count":108}]},{"cell_type":"code","metadata":{"id":"QorYHap7Rsc_"},"source":["## Categorize/ create bins for the L2 operator time and create new feature L3_OP_PER\n","\n","df_L3['L3_OP_PER']=pd.cut(x=df_L3['L3_Op_Time'], bins=[0,20,40,60,150], \n","                        labels=[\"excellent\", \"good\", \"normal\", \"bad\"])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"ls1wGlJxSL73","executionInfo":{"status":"ok","timestamp":1628806152007,"user_tz":-330,"elapsed":734,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"f1145998-0d9d-405f-8372-057b47235608"},"source":["df_L3.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>L3LoginID</th>\n","      <th>L3Decision</th>\n","      <th>L3_Op_Time</th>\n","      <th>L3_OP_PER</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>32887.0</td>\n","      <td>Reject</td>\n","      <td>8.0</td>\n","      <td>excellent</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   L3LoginID L3Decision  L3_Op_Time  L3_OP_PER\n","0    32887.0     Reject         8.0  excellent\n","1        NaN        NaN         NaN        NaN\n","2        NaN        NaN         NaN        NaN\n","3        NaN        NaN         NaN        NaN\n","4        NaN        NaN         NaN        NaN"]},"metadata":{"tags":[]},"execution_count":110}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qAzMSkHwSRWt","executionInfo":{"status":"ok","timestamp":1628806154565,"user_tz":-330,"elapsed":7,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"fb0f0964-9c6b-4244-eb26-f703ec4628b0"},"source":["# Checking NA Values\n","df_L3.isna().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["L3LoginID     812741\n","L3Decision    812741\n","L3_Op_Time    812741\n","L3_OP_PER     812741\n","dtype: int64"]},"metadata":{"tags":[]},"execution_count":111}]},{"cell_type":"code","metadata":{"id":"5wcXgudcTOuk"},"source":["# droping NA Values\n","df_L3 = df_L3.dropna()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"OUzvMqxoTUhh","executionInfo":{"status":"ok","timestamp":1628806159690,"user_tz":-330,"elapsed":12,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"6f013606-07b2-464e-e20e-ccc5ccf6138d"},"source":["df_L3.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>L3LoginID</th>\n","      <th>L3Decision</th>\n","      <th>L3_Op_Time</th>\n","      <th>L3_OP_PER</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>32887.0</td>\n","      <td>Reject</td>\n","      <td>8.0</td>\n","      <td>excellent</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>32887.0</td>\n","      <td>Accept</td>\n","      <td>42.0</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>5525.0</td>\n","      <td>Reject</td>\n","      <td>9.0</td>\n","      <td>excellent</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>5525.0</td>\n","      <td>Reject</td>\n","      <td>9.0</td>\n","      <td>excellent</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>32887.0</td>\n","      <td>Accept</td>\n","      <td>24.0</td>\n","      <td>good</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    L3LoginID L3Decision  L3_Op_Time  L3_OP_PER\n","0     32887.0     Reject         8.0  excellent\n","8     32887.0     Accept        42.0     normal\n","9      5525.0     Reject         9.0  excellent\n","12     5525.0     Reject         9.0  excellent\n","14    32887.0     Accept        24.0       good"]},"metadata":{"tags":[]},"execution_count":113}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K6BxU5fMTjmB","executionInfo":{"status":"ok","timestamp":1628806161616,"user_tz":-330,"elapsed":16,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"1e8c321e-c01e-4633-97b5-c1e93b17a646"},"source":["df_L3.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(233915, 4)"]},"metadata":{"tags":[]},"execution_count":114}]},{"cell_type":"code","metadata":{"id":"unDd8dvrTnuP"},"source":["# Replacing the Time_Out values from the L3Decision with \"bad\" in L3_OP_PER for those having time less than 25 sec\n","# First mark values corrusponding in L3_OP_PER as nan\n","df_L3['L3_OP_PER'][df_L3.L3Decision == 'Time out'] = np.nan"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"UOBBfXveT3C8","executionInfo":{"status":"ok","timestamp":1628806166795,"user_tz":-330,"elapsed":18,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"58a13667-5efe-4fd8-d118-0a6dede92f40"},"source":["df_L3.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>L3LoginID</th>\n","      <th>L3Decision</th>\n","      <th>L3_Op_Time</th>\n","      <th>L3_OP_PER</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>32887.0</td>\n","      <td>Reject</td>\n","      <td>8.0</td>\n","      <td>excellent</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>32887.0</td>\n","      <td>Accept</td>\n","      <td>42.0</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>5525.0</td>\n","      <td>Reject</td>\n","      <td>9.0</td>\n","      <td>excellent</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>5525.0</td>\n","      <td>Reject</td>\n","      <td>9.0</td>\n","      <td>excellent</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>32887.0</td>\n","      <td>Accept</td>\n","      <td>24.0</td>\n","      <td>good</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    L3LoginID L3Decision  L3_Op_Time  L3_OP_PER\n","0     32887.0     Reject         8.0  excellent\n","8     32887.0     Accept        42.0     normal\n","9      5525.0     Reject         9.0  excellent\n","12     5525.0     Reject         9.0  excellent\n","14    32887.0     Accept        24.0       good"]},"metadata":{"tags":[]},"execution_count":116}]},{"cell_type":"code","metadata":{"id":"pFMvkdqHT8ux"},"source":["# now replace NAN with \"bad\"\n","df_L3['L3_OP_PER'].fillna('bad', inplace =True) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":17},"id":"wOp1KOIShnYF","executionInfo":{"status":"ok","timestamp":1628805017351,"user_tz":-330,"elapsed":941,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"c8cd82de-b672-4733-ce56-ae71814a9e7b"},"source":["from google.colab import files\n","df_L3.to_csv('df_L3.csv') \n","files.download('df_L3.csv')"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/javascript":["\n","    async function download(id, filename, size) {\n","      if (!google.colab.kernel.accessAllowed) {\n","        return;\n","      }\n","      const div = document.createElement('div');\n","      const label = document.createElement('label');\n","      label.textContent = `Downloading \"${filename}\": `;\n","      div.appendChild(label);\n","      const progress = document.createElement('progress');\n","      progress.max = size;\n","      div.appendChild(progress);\n","      document.body.appendChild(div);\n","\n","      const buffers = [];\n","      let downloaded = 0;\n","\n","      const channel = await google.colab.kernel.comms.open(id);\n","      // Send a message to notify the kernel that we're ready.\n","      channel.send({})\n","\n","      for await (const message of channel.messages) {\n","        // Send a message to notify the kernel that we're ready.\n","        channel.send({})\n","        if (message.buffers) {\n","          for (const buffer of message.buffers) {\n","            buffers.push(buffer);\n","            downloaded += buffer.byteLength;\n","            progress.value = downloaded;\n","          }\n","        }\n","      }\n","      const blob = new Blob(buffers, {type: 'application/binary'});\n","      const a = document.createElement('a');\n","      a.href = window.URL.createObjectURL(blob);\n","      a.download = filename;\n","      div.appendChild(a);\n","      a.click();\n","      div.remove();\n","    }\n","  "],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"application/javascript":["download(\"download_cca9ce5c-ed89-40c6-ab22-91c89d9ce42b\", \"df_L3.csv\", 8032184)"],"text/plain":["<IPython.core.display.Javascript object>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"Nxi87lqqT_gc"},"source":["#Applying Label Encoding to column L3Decision\n","lb = LabelEncoder()\n","df_L3[\"L3Decision\"] = lb.fit_transform(df_L3[\"L3Decision\"])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"yt3ELU0WUHfS","executionInfo":{"status":"ok","timestamp":1628806247363,"user_tz":-330,"elapsed":519,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"c0bb0d83-0c29-46c8-c663-2a63456cdc9e"},"source":["df_L3.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>L3_OP_PER</th>\n","      <th>L3LoginID</th>\n","      <th>L3Decision</th>\n","      <th>L3_Op_Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>excellent</td>\n","      <td>32887.0</td>\n","      <td>1</td>\n","      <td>8.0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>normal</td>\n","      <td>32887.0</td>\n","      <td>0</td>\n","      <td>42.0</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>excellent</td>\n","      <td>5525.0</td>\n","      <td>1</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>excellent</td>\n","      <td>5525.0</td>\n","      <td>1</td>\n","      <td>9.0</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>good</td>\n","      <td>32887.0</td>\n","      <td>0</td>\n","      <td>24.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["    L3_OP_PER  L3LoginID  L3Decision  L3_Op_Time\n","0   excellent    32887.0           1         8.0\n","8      normal    32887.0           0        42.0\n","9   excellent     5525.0           1         9.0\n","12  excellent     5525.0           1         9.0\n","14       good    32887.0           0        24.0"]},"metadata":{"tags":[]},"execution_count":121}]},{"cell_type":"code","metadata":{"id":"jTUJpPCtahT3"},"source":["df_L3 = df_L3[[\"L3_OP_PER\", \"L3LoginID\", \"L3Decision\",  \"L3_Op_Time\"]]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6C3yptvlUMWd"},"source":["# Splitting data into training and testing data set\n","from sklearn.model_selection import train_test_split\n","train, test = train_test_split(df_L3, test_size = 0.2)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CqXsoxCDUPlj","executionInfo":{"status":"ok","timestamp":1628806262223,"user_tz":-330,"elapsed":9,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"bc96bbb3-f137-424c-c948-dd23f7740b66"},"source":["train.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(187132, 4)"]},"metadata":{"tags":[]},"execution_count":123}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2KGon8T0UR95","executionInfo":{"status":"ok","timestamp":1628806264472,"user_tz":-330,"elapsed":8,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"e45cb0ec-2334-410e-b1e6-2c13f050593c"},"source":["test.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(46783, 4)"]},"metadata":{"tags":[]},"execution_count":124}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xjtqP5x1a0Fz","executionInfo":{"status":"ok","timestamp":1628806399328,"user_tz":-330,"elapsed":97908,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"a7266a30-e879-4d84-8d03-a9fb3cc62211"},"source":["model_1 = LogisticRegression(multi_class = \"multinomial\", solver = \"newton-cg\").fit(train.iloc[:, 1:], train.iloc[:, 0])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/scipy/optimize/linesearch.py:466: LineSearchWarning: The line search algorithm did not converge\n","  warn('The line search algorithm did not converge', LineSearchWarning)\n","/usr/local/lib/python3.7/dist-packages/scipy/optimize/linesearch.py:314: LineSearchWarning: The line search algorithm did not converge\n","  warn('The line search algorithm did not converge', LineSearchWarning)\n","/usr/local/lib/python3.7/dist-packages/sklearn/utils/optimize.py:212: ConvergenceWarning: newton-cg failed to converge. Increase the number of iterations.\n","  \"number of iterations.\", ConvergenceWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"mCEmGgISbuqM"},"source":["# Test predictions\n","test_predict = model_1.predict(test.iloc[:, 1:]) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NRxLqDRBb8uq","executionInfo":{"status":"ok","timestamp":1628806567984,"user_tz":-330,"elapsed":477,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"f1ee1fef-a647-4e67-8334-313285e3b2f8"},"source":["# Test accuracy \n","accuracy_score(test.iloc[:,0], test_predict)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9575273069277301"]},"metadata":{"tags":[]},"execution_count":128}]},{"cell_type":"code","metadata":{"id":"XsjuAneBb-4Z"},"source":["# Train predictions\n","train_predict = model_1.predict(train.iloc[:, 1:]) "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CFu9NqAhcJYn","executionInfo":{"status":"ok","timestamp":1628806621110,"user_tz":-330,"elapsed":592,"user":{"displayName":"Sandip Tekale","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgsbhN8mwJGNanK14tY9HjszdqTQYfMTwEUJDDjGQ=s64","userId":"09422301599266723753"}},"outputId":"d9bae66a-5881-4874-db2b-529157ef7c65"},"source":["# Train accuracy \n","accuracy_score(train.iloc[:,0], train_predict)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.956923455101212"]},"metadata":{"tags":[]},"execution_count":130}]}]}